clear all;close all;
% rng(0);
%% CPM parameter
h = 0.5; % modulation number
L = 2;   % related length
HeadNumS1 = 128; % No. of PN head
HeadNumS2 = 130; % No. of PN head
TotalNum = 800;
nn = TotalNum - HeadNumS1 - HeadNumS1; % No. of modulate code
DataPartNum1 = 72;
DataPartNum2 = 70;
DataMainNum = 400;
DataValidNum = DataMainNum + DataPartNum1/2 + DataPartNum2/2;
Tp = 20;  % LFM time width
Ts = Tp/TotalNum;% symbol time width
sym_rate = 1/Ts;
%% LFM parameter
B = 40; % Band width MHz
K = B/Tp;  % FM slope MHz/mus B/Tp
fc = 100; % carry frequence MHz 
fd = 0.001; % frequence deviation 
phid = 0.1 * pi; % phase deviation
Ne = 1000;

err_rec = [];
signal_fre_rec = [];

for EbN0 = 0:10

    erro_cnt = 0; % statistic erro rate

    for ll = 1:Ne

        up = 1;
        fs = 320*up; % sample frequence MHz 
        oversample = fs*Ts;

        S1 = ones(1, HeadNumS1);
        S1(2:2:end) = 0;
        S2 = [1, 0, S1];

        dataMain = randi([0 1], [1 DataMainNum]);
        DataPart1 = randi([0 1], [1 DataPartNum1/2]);
        DataPart2 = randi([0 1], [1 DataPartNum2/2]);

        dataOrigin = [DataPart1, dataMain, DataPart2];

        DataPart1Expend = [];
        DataPart2Expend = [];

        for i = 1:DataPartNum1/2
            if DataPart1(i) == 1
                DataPart1Expend = [DataPart1Expend, 1, 1];
            else
                DataPart1Expend = [DataPart1Expend, 0, 0];
            end
        end

        for i = 1:DataPartNum2/2
            if DataPart2(i) == 1
                DataPart2Expend = [DataPart2Expend, 1, 0];
            else
                DataPart2Expend = [DataPart2Expend, 0, 1];
            end
        end

        data = [DataPart1Expend, dataMain, DataPart2Expend];
        DataPre = precode([S1, data, S2]);

        CPM_BB = CPMmod(DataPre, oversample);
        % figure
        % plot(angle(CPM_BB))
        t = -0.5*Tp : 1/fs: 0.5*Tp - 1/fs;
        t = t + 1/fs/2;
        CPM_LFM = CPM_BB .* exp(1i*K*pi*t.^2);
        %% show frequency of K-LFM-CPM
        % CPM_LFM_FRE = abs(fftshift(fft(CPM_LFM)));
        % signal_fre_rec = FreSum(signal_fre_rec, 20*log10(CPM_LFM_FRE ./ max(CPM_LFM_FRE)));

        DelayNum = round(rand*100)*oversample;
        signal_tx = [zeros(1, DelayNum), CPM_LFM .* exp(1i*2*pi*fc*t) .* exp(1i*phid), zeros(1,10*oversample)];
        %% test for sample deviation
        % signal_tx = signal_tx(1:up:end);
        oversample = oversample / up;
        fs = fs / up;

        %% add noise
        signal_noise = awgn(signal_tx, -10*log10(oversample) + EbN0, 'measured');

        % 320MHz 75 85 115 125
        % BP = [0.000358715919567819,0.000140539917652923,0.000675450441463291,-0.00171111102825296,-0.000184232530213930,0.00167327357745292,-0.00134884206445288,-0.000515374163924548,-6.36226240529529e-05,0.000436698255436764,0.00191869131863069,-0.00385080205463883,-4.04900583648471e-05,0.00472092852596315,-0.00313075919881066,-0.00103404523193132,8.06484614265686e-06,0.00119549753830669,0.00456233459510921,-0.00860826590736137,-7.65534212252729e-06,0.0103409287736129,-0.00664706643041966,-0.00213589932652961,3.21522191254023e-05,0.00250694569141596,0.00937416328952082,-0.0174791983321548,-7.99242683056368e-09,0.0208171306570387,-0.0133277082429480,-0.00427328012884034,4.37013880299154e-05,0.00509343704413612,0.0191534143842136,-0.0360912423350673,1.97648534235996e-06,0.0445182517312843,-0.0292308951187610,-0.00967895667418309,4.95699969858307e-05,0.0127533015956758,0.0514143739089295,-0.106360541578663,1.66231605950780e-06,0.179759613546804,-0.158639067277286,-0.0931690832223197,0.250052151541475,-0.0931690832223197,-0.158639067277286,0.179759613546804,1.66231605950780e-06,-0.106360541578663,0.0514143739089295,0.0127533015956758,4.95699969858307e-05,-0.00967895667418309,-0.0292308951187610,0.0445182517312843,1.97648534235996e-06,-0.0360912423350673,0.0191534143842136,0.00509343704413612,4.37013880299154e-05,-0.00427328012884034,-0.0133277082429480,0.0208171306570387,-7.99242683056368e-09,-0.0174791983321548,0.00937416328952082,0.00250694569141596,3.21522191254023e-05,-0.00213589932652961,-0.00664706643041966,0.0103409287736129,-7.65534212252729e-06,-0.00860826590736137,0.00456233459510921,0.00119549753830669,8.06484614265686e-06,-0.00103404523193132,-0.00313075919881066,0.00472092852596315,-4.04900583648471e-05,-0.00385080205463883,0.00191869131863069,0.000436698255436764,-6.36226240529529e-05,-0.000515374163924548,-0.00134884206445288,0.00167327357745292,-0.000184232530213930,-0.00171111102825296,0.000675450441463291,0.000140539917652923,0.000358715919567819];
        % signal_recv = conv(signal_noise, BP);
        % signal_recv = signal_recv(48+1:end-48);
        signal_recv = signal_noise;

        %% base signal
        tt = 0 : 1/fs : length(signal_recv) * (1/fs) - 1/fs;
        tt = tt + 1/fs/2;
        CPM_LFM_recv = signal_recv .* exp(-1i*2*pi*(fc-fd)*tt);
        % 320MHz 20 30
        LP1 = [-0.00103379461395720,-0.000465811889819463,-0.000334308000415149,-1.84258491957281e-05,0.000439798237548568,0.000939305186690589,0.00133609618222303,0.00147734478266016,0.00124782219442037,0.000614019688456112,-0.000344453210592563,-0.00143290102587998,-0.00237155487569763,-0.00285970415534253,-0.00265750057133241,-0.00166939383289345,-1.04611529064469e-06,0.00202847294944268,0.00393483378704111,0.00517074856656864,0.00526637473831359,0.00397246904769070,0.00137076391812052,-0.00208778162019029,-0.00563680053121249,-0.00834556823305301,-0.00933727027884151,-0.00803235595437473,-0.00435135804647325,0.00117254918589430,0.00742761291985993,0.0129063761666156,0.0160255047455268,0.0155060301451401,0.0107561368740241,0.00213805092791680,-0.00894339919499731,-0.0201751605758279,-0.0287003167251056,-0.0316422342267934,-0.0267058016235034,-0.0127186509797111,0.00999645994804771,0.0395192380077886,0.0725333585738647,0.104816286506429,0.131928514268598,0.149978087923762,0.156308654799662,0.149978087923762,0.131928514268598,0.104816286506429,0.0725333585738647,0.0395192380077886,0.00999645994804771,-0.0127186509797111,-0.0267058016235034,-0.0316422342267934,-0.0287003167251056,-0.0201751605758279,-0.00894339919499731,0.00213805092791680,0.0107561368740241,0.0155060301451401,0.0160255047455268,0.0129063761666156,0.00742761291985993,0.00117254918589430,-0.00435135804647325,-0.00803235595437473,-0.00933727027884151,-0.00834556823305301,-0.00563680053121249,-0.00208778162019029,0.00137076391812052,0.00397246904769070,0.00526637473831359,0.00517074856656864,0.00393483378704111,0.00202847294944268,-1.04611529064469e-06,-0.00166939383289345,-0.00265750057133241,-0.00285970415534253,-0.00237155487569763,-0.00143290102587998,-0.000344453210592563,0.000614019688456112,0.00124782219442037,0.00147734478266016,0.00133609618222303,0.000939305186690589,0.000439798237548568,-1.84258491957281e-05,-0.000334308000415149,-0.000465811889819463,-0.00103379461395720];
        CPM_LFM_recv = conv(CPM_LFM_recv, LP1);
        CPM_LFM_recv = CPM_LFM_recv(48+1:end-48);

        %% catch
        t = -0.5*Tp : 1/fs: 0.5*Tp - 1/fs;
        t = t + 1/fs/2;
        wavHead = exp(1i*K*pi*t(1:HeadNumS1*oversample).^2);
        cor = zeros(1, length(CPM_LFM_recv)-HeadNumS1*oversample);
        for i = 1:length(CPM_LFM_recv)-HeadNumS1*oversample
            cor(i) = abs(CPM_LFM_recv(i:i+HeadNumS1*oversample-1) * wavHead');
        end
        % figure
        % plot(cor)

        [~, mpos] = max(cor);
        CPM_LFM_catch = CPM_LFM_recv(mpos:mpos+TotalNum*oversample-1);

        %% delete LFM
        CPM_catch = CPM_LFM_catch .* exp(-1i*K*pi*t.^2);
        CPM_catch = CPM_catch(2:2:end);
        % 160MHz 18 22
        LP2 = [0.00112804040350358,-0.00230692369123179,-0.00183860742281140,-0.00122986824872641,-8.08960979657556e-05,0.00124273284674085,0.00198981911191673,0.00156633838305102,9.64422242106891e-06,-0.00188333026464001,-0.00293134159625802,-0.00227507226795886,-1.20936190775595e-05,0.00268505852407559,0.00414288431921414,0.00319087599300736,1.44292759744634e-05,-0.00372354999304350,-0.00571302782896848,-0.00437710970911800,-1.66428695024817e-05,0.00507617161692802,0.00776171510393027,0.00593093862439247,1.75276963446280e-05,-0.00686853844457950,-0.0104962295877020,-0.00802142609651520,-1.92816078725643e-05,0.00933270963013210,0.0143041745393060,0.0109779082346868,2.06571785335718e-05,-0.0129500757812967,-0.0200244523288904,-0.0155361619430618,-2.12859003483815e-05,0.0189122921988890,0.0298476826359837,0.0237561378153748,2.08660240956633e-05,-0.0311453282434041,-0.0518414616334973,-0.0443182463070515,-2.21532680545077e-05,0.0745811485197223,0.158749336518504,0.224951026443905,0.250021393462443,0.224951026443905,0.158749336518504,0.0745811485197223,-2.21532680545077e-05,-0.0443182463070515,-0.0518414616334973,-0.0311453282434041,2.08660240956633e-05,0.0237561378153748,0.0298476826359837,0.0189122921988890,-2.12859003483815e-05,-0.0155361619430618,-0.0200244523288904,-0.0129500757812967,2.06571785335718e-05,0.0109779082346868,0.0143041745393060,0.00933270963013210,-1.92816078725643e-05,-0.00802142609651520,-0.0104962295877020,-0.00686853844457950,1.75276963446280e-05,0.00593093862439247,0.00776171510393027,0.00507617161692802,-1.66428695024817e-05,-0.00437710970911800,-0.00571302782896848,-0.00372354999304350,1.44292759744634e-05,0.00319087599300736,0.00414288431921414,0.00268505852407559,-1.20936190775595e-05,-0.00227507226795886,-0.00293134159625802,-0.00188333026464001,9.64422242106891e-06,0.00156633838305102,0.00198981911191673,0.00124273284674085,-8.08960979657556e-05,-0.00122986824872641,-0.00183860742281140,-0.00230692369123179,0.00112804040350358];
        CPM_recv = conv(CPM_catch, LP2);
        CPM_recv = CPM_recv(48+1:end-48);

        oversample_base = oversample / 2;
        %% Estimate frequency and phase deviation
        % Frequency
        S1R = CPM_recv(1:HeadNumS1*oversample_base);
        S2R = CPM_recv(end-HeadNumS1*oversample_base+1:end);
        FreEst = S2R .* conj(S1R);
        FreEstVal = angle(mean(FreEst)) / 2 / pi / Ts / (nn+HeadNumS1);
        t = t(2:2:end);
        CPM_recv = CPM_recv .* exp(-1i*2*pi*FreEstVal*t);
        % Phase
        S1R = CPM_recv(1:HeadNumS1*oversample_base);
        S2R = CPM_recv(end-HeadNumS1*oversample_base+1:end);
        PhiEst = [S2R, S1R];
        PhiEstVal = angle(mean(PhiEst));
        CPM_recv = CPM_recv .* exp(-1i*PhiEstVal);
        %% Demod
        res = CPMdemod(CPM_recv(HeadNumS1*oversample_base+1:end-HeadNumS1*oversample_base), oversample_base, nn);
        res_decode = decode(res);
        resP1 = res_decode(1:DataPartNum1);
        resP2 = res_decode(end-DataPartNum2+1-2:end-2);
        resP1fnl = [];
        resP2fnl = [];
        for i = 1:2:length(resP1)
            resP1fnl = [resP1fnl, resP1(i)];
        end
        for i = 1:2:length(resP2)
            resP2fnl = [resP2fnl, resP2(i)];
        end
        resFnl = [resP1fnl, res_decode(DataPartNum1+1:DataPartNum1+DataMainNum), resP2fnl];
        erro_cnt = erro_cnt + sum(abs(resFnl-dataOrigin));
    end
    err_rec = [err_rec, erro_cnt / Ne / DataValidNum]
end
%% show cummulative frequency
% figure
% plot(signal_fre_rec/Ne)

%% show error curve
ebn0 = 0:10;
f = figure;
f.PaperUnits = 'centimeters';
f.PaperSize = [16, 12];
f.Units = 'centimeters';
f.Position = [0, 0, 16, 12];
semilogy(ebn0, err_rec, '-s', 'LineWidth', 2);
grid on;